//
//  GoalieFaceKit.swift
//  Goalie
//
//  Created by Gregory Klein on 1/5/16.
//  Copyright (c) 2016 Incipia. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class GoalieFaceKit : NSObject {

    //// Drawing Methods

    public class func drawSleepingFace() {
        //// Color Declarations
        let fillColor3 = UIColor(red: 0.225, green: 0.211, blue: 0.504, alpha: 1.000)
        let fillColor6 = UIColor(red: 0.191, green: 0.180, blue: 0.422, alpha: 1.000)

        //// Group 2
        //// Group 4
        //// Group 5
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(32.2, 45.19))
        bezier2Path.addCurveToPoint(CGPointMake(28, 40.99), controlPoint1: CGPointMake(29.89, 45.19), controlPoint2: CGPointMake(28, 43.3))
        bezier2Path.addCurveToPoint(CGPointMake(28.99, 40), controlPoint1: CGPointMake(28, 40.47), controlPoint2: CGPointMake(28.42, 40))
        bezier2Path.addCurveToPoint(CGPointMake(29.98, 40.99), controlPoint1: CGPointMake(29.56, 40), controlPoint2: CGPointMake(29.98, 40.42))
        bezier2Path.addCurveToPoint(CGPointMake(32.25, 43.26), controlPoint1: CGPointMake(29.98, 42.22), controlPoint2: CGPointMake(30.97, 43.26))
        bezier2Path.addCurveToPoint(CGPointMake(34.51, 40.99), controlPoint1: CGPointMake(33.47, 43.26), controlPoint2: CGPointMake(34.51, 42.26))
        bezier2Path.addCurveToPoint(CGPointMake(35.5, 40), controlPoint1: CGPointMake(34.51, 40.47), controlPoint2: CGPointMake(34.94, 40))
        bezier2Path.addCurveToPoint(CGPointMake(36.49, 40.99), controlPoint1: CGPointMake(36.07, 40), controlPoint2: CGPointMake(36.49, 40.42))
        bezier2Path.addCurveToPoint(CGPointMake(32.2, 45.19), controlPoint1: CGPointMake(36.45, 43.26), controlPoint2: CGPointMake(34.56, 45.19))
        bezier2Path.closePath()
        bezier2Path.miterLimit = 4;

        fillColor3.setFill()
        bezier2Path.fill()




        //// Group 6
        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(50.32, 45.19))
        bezier3Path.addCurveToPoint(CGPointMake(46.12, 40.99), controlPoint1: CGPointMake(48.01, 45.19), controlPoint2: CGPointMake(46.12, 43.3))
        bezier3Path.addCurveToPoint(CGPointMake(47.11, 40), controlPoint1: CGPointMake(46.12, 40.47), controlPoint2: CGPointMake(46.54, 40))
        bezier3Path.addCurveToPoint(CGPointMake(48.1, 40.99), controlPoint1: CGPointMake(47.68, 40), controlPoint2: CGPointMake(48.1, 40.42))
        bezier3Path.addCurveToPoint(CGPointMake(50.37, 43.26), controlPoint1: CGPointMake(48.1, 42.22), controlPoint2: CGPointMake(49.09, 43.26))
        bezier3Path.addCurveToPoint(CGPointMake(52.63, 40.99), controlPoint1: CGPointMake(51.59, 43.26), controlPoint2: CGPointMake(52.63, 42.26))
        bezier3Path.addCurveToPoint(CGPointMake(53.62, 40), controlPoint1: CGPointMake(52.63, 40.47), controlPoint2: CGPointMake(53.06, 40))
        bezier3Path.addCurveToPoint(CGPointMake(54.61, 40.99), controlPoint1: CGPointMake(54.19, 40), controlPoint2: CGPointMake(54.61, 40.42))
        bezier3Path.addCurveToPoint(CGPointMake(50.32, 45.19), controlPoint1: CGPointMake(54.57, 43.26), controlPoint2: CGPointMake(52.68, 45.19))
        bezier3Path.closePath()
        bezier3Path.miterLimit = 4;

        fillColor3.setFill()
        bezier3Path.fill()




        //// Group 7
        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRectMake(37.86, 52.13, 6.61, 6.61))
        fillColor3.setFill()
        ovalPath.fill()




        //// Group 8
        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPointMake(41.17, 53.12))
        bezier4Path.addCurveToPoint(CGPointMake(44.42, 55.95), controlPoint1: CGPointMake(42.82, 53.12), controlPoint2: CGPointMake(44.18, 54.34))
        bezier4Path.addCurveToPoint(CGPointMake(44.47, 55.48), controlPoint1: CGPointMake(44.47, 55.81), controlPoint2: CGPointMake(44.47, 55.62))
        bezier4Path.addCurveToPoint(CGPointMake(41.17, 52.17), controlPoint1: CGPointMake(44.47, 53.64), controlPoint2: CGPointMake(43.01, 52.17))
        bezier4Path.addCurveToPoint(CGPointMake(37.86, 55.48), controlPoint1: CGPointMake(39.32, 52.17), controlPoint2: CGPointMake(37.86, 53.64))
        bezier4Path.addCurveToPoint(CGPointMake(37.91, 55.95), controlPoint1: CGPointMake(37.86, 55.67), controlPoint2: CGPointMake(37.86, 55.81))
        bezier4Path.addCurveToPoint(CGPointMake(41.17, 53.12), controlPoint1: CGPointMake(38.1, 54.34), controlPoint2: CGPointMake(39.47, 53.12))
        bezier4Path.closePath()
        bezier4Path.miterLimit = 4;

        fillColor6.setFill()
        bezier4Path.fill()
    }

    public class func drawAgesFace() {
      //// Color Declarations
      let fillColor8 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
      let fillColor14 = UIColor(red: 0.098, green: 0.324, blue: 0.243, alpha: 1.000)
      
      //// Group 2
      //// Group 3
      //// Bezier Drawing
      let bezierPath = UIBezierPath()
      bezierPath.moveToPoint(CGPointMake(39.9, 58.12))
      bezierPath.addCurveToPoint(CGPointMake(48.34, 53.12), controlPoint1: CGPointMake(43.67, 58.12), controlPoint2: CGPointMake(46.93, 56.05))
      bezierPath.addCurveToPoint(CGPointMake(46.74, 49.96), controlPoint1: CGPointMake(49, 51.7), controlPoint2: CGPointMake(48.11, 49.96))
      bezierPath.addLineToPoint(CGPointMake(33.1, 49.96))
      bezierPath.addCurveToPoint(CGPointMake(31.54, 53.26), controlPoint1: CGPointMake(31.69, 49.96), controlPoint2: CGPointMake(30.84, 51.8))
      bezierPath.addCurveToPoint(CGPointMake(39.9, 58.12), controlPoint1: CGPointMake(32.91, 56.14), controlPoint2: CGPointMake(36.17, 58.12))
      bezierPath.closePath()
      bezierPath.miterLimit = 4;
      
      fillColor8.setFill()
      bezierPath.fill()
      
      
      //// Bezier 2 Drawing
      let bezier2Path = UIBezierPath()
      bezier2Path.moveToPoint(CGPointMake(60.05, 35))
      bezier2Path.addLineToPoint(CGPointMake(55.85, 35))
      bezier2Path.addLineToPoint(CGPointMake(52.97, 35))
      bezier2Path.addLineToPoint(CGPointMake(45.18, 35))
      bezier2Path.addCurveToPoint(CGPointMake(42.96, 36.98), controlPoint1: CGPointMake(44, 35), controlPoint2: CGPointMake(42.96, 35.8))
      bezier2Path.addLineToPoint(CGPointMake(42.96, 38.3))
      bezier2Path.addCurveToPoint(CGPointMake(39.9, 37.64), controlPoint1: CGPointMake(42.02, 37.74), controlPoint2: CGPointMake(40.93, 37.5))
      bezier2Path.addCurveToPoint(CGPointMake(38.24, 38.21), controlPoint1: CGPointMake(39.19, 37.74), controlPoint2: CGPointMake(38.72, 37.93))
      bezier2Path.addLineToPoint(CGPointMake(38.24, 36.98))
      bezier2Path.addCurveToPoint(CGPointMake(35.89, 35), controlPoint1: CGPointMake(38.24, 35.8), controlPoint2: CGPointMake(37.11, 35))
      bezier2Path.addLineToPoint(CGPointMake(26.87, 35))
      bezier2Path.addLineToPoint(CGPointMake(25.27, 35))
      bezier2Path.addLineToPoint(CGPointMake(19.75, 35))
      bezier2Path.addCurveToPoint(CGPointMake(19.37, 36.32), controlPoint1: CGPointMake(18.99, 35), controlPoint2: CGPointMake(18.71, 35.9))
      bezier2Path.addLineToPoint(CGPointMake(23.38, 38.87))
      bezier2Path.addLineToPoint(CGPointMake(24.04, 42.27))
      bezier2Path.addCurveToPoint(CGPointMake(26.17, 44.01), controlPoint1: CGPointMake(24.23, 43.3), controlPoint2: CGPointMake(25.13, 44.01))
      bezier2Path.addLineToPoint(CGPointMake(35.89, 44.01))
      bezier2Path.addCurveToPoint(CGPointMake(38.24, 41.84), controlPoint1: CGPointMake(37.07, 44.01), controlPoint2: CGPointMake(38.24, 43.07))
      bezier2Path.addLineToPoint(CGPointMake(38.24, 40.62))
      bezier2Path.addCurveToPoint(CGPointMake(40.13, 39.58), controlPoint1: CGPointMake(38.24, 40.38), controlPoint2: CGPointMake(39.05, 39.67))
      bezier2Path.addCurveToPoint(CGPointMake(42.96, 40.62), controlPoint1: CGPointMake(41.08, 39.48), controlPoint2: CGPointMake(42.02, 39.81))
      bezier2Path.addLineToPoint(CGPointMake(42.96, 41.89))
      bezier2Path.addCurveToPoint(CGPointMake(45.18, 44.06), controlPoint1: CGPointMake(42.96, 43.07), controlPoint2: CGPointMake(44, 44.06))
      bezier2Path.addLineToPoint(CGPointMake(54.95, 44.06))
      bezier2Path.addCurveToPoint(CGPointMake(57.07, 42.31), controlPoint1: CGPointMake(55.99, 44.06), controlPoint2: CGPointMake(56.88, 43.3))
      bezier2Path.addLineToPoint(CGPointMake(57.87, 37.97))
      bezier2Path.addLineToPoint(CGPointMake(60.47, 36.42))
      bezier2Path.addCurveToPoint(CGPointMake(60.05, 35), controlPoint1: CGPointMake(61.08, 35.9), controlPoint2: CGPointMake(60.8, 35))
      bezier2Path.closePath()
      bezier2Path.miterLimit = 4;
      
      fillColor14.setFill()
      bezier2Path.fill()
    }

    public class func drawLaterFace() {
        //// Color Declarations
        let fillColor8 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor9 = UIColor(red: 0.090, green: 0.233, blue: 0.352, alpha: 1.000)

        //// Group 11
        //// Group 12
        //// Oval 6 Drawing
        let oval6Path = UIBezierPath(ovalInRect: CGRectMake(28, 40, 6.61, 6.61))
        fillColor9.setFill()
        oval6Path.fill()


        //// Oval 7 Drawing
        let oval7Path = UIBezierPath(ovalInRect: CGRectMake(46.12, 40, 6.61, 6.61))
        fillColor9.setFill()
        oval7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.moveToPoint(CGPointMake(40.32, 58.64))
        bezier8Path.addCurveToPoint(CGPointMake(48.76, 53.64), controlPoint1: CGPointMake(44.09, 58.64), controlPoint2: CGPointMake(47.35, 56.56))
        bezier8Path.addCurveToPoint(CGPointMake(47.16, 50.47), controlPoint1: CGPointMake(49.42, 52.22), controlPoint2: CGPointMake(48.53, 50.47))
        bezier8Path.addLineToPoint(CGPointMake(33.52, 50.47))
        bezier8Path.addCurveToPoint(CGPointMake(31.96, 53.78), controlPoint1: CGPointMake(32.11, 50.47), controlPoint2: CGPointMake(31.26, 52.32))
        bezier8Path.addCurveToPoint(CGPointMake(40.32, 58.64), controlPoint1: CGPointMake(33.33, 56.61), controlPoint2: CGPointMake(36.54, 58.64))
        bezier8Path.closePath()
        bezier8Path.miterLimit = 4;

        fillColor8.setFill()
        bezier8Path.fill()
    }

    public class func drawSoonFace() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Color Declarations
        let fillColor8 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor10 = UIColor(red: 0.611, green: 0.356, blue: 0.044, alpha: 1.000)
        let fillColor11 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.600)

        //// Group 13
        //// Group 14
        //// Oval 8 Drawing
        let oval8Path = UIBezierPath(ovalInRect: CGRectMake(28.7, 39.99, 6.61, 6.61))
        fillColor10.setFill()
        oval8Path.fill()


        //// Oval 9 Drawing
        let oval9Path = UIBezierPath(ovalInRect: CGRectMake(46.82, 39.99, 6.61, 6.61))
        fillColor10.setFill()
        oval9Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.moveToPoint(CGPointMake(29.65, 32.72))
        bezier9Path.addCurveToPoint(CGPointMake(27.05, 35.32), controlPoint1: CGPointMake(29.65, 34.14), controlPoint2: CGPointMake(28.47, 35.32))
        bezier9Path.addCurveToPoint(CGPointMake(24.46, 32.72), controlPoint1: CGPointMake(25.64, 35.32), controlPoint2: CGPointMake(24.46, 34.14))
        bezier9Path.addCurveToPoint(CGPointMake(26.53, 28.85), controlPoint1: CGPointMake(24.46, 31.68), controlPoint2: CGPointMake(25.78, 29.84))
        bezier9Path.addCurveToPoint(CGPointMake(27.57, 28.85), controlPoint1: CGPointMake(26.81, 28.52), controlPoint2: CGPointMake(27.29, 28.52))
        bezier9Path.addCurveToPoint(CGPointMake(29.65, 32.72), controlPoint1: CGPointMake(28.32, 29.84), controlPoint2: CGPointMake(29.65, 31.68))
        bezier9Path.closePath()
        bezier9Path.miterLimit = 4;

        fillColor11.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.moveToPoint(CGPointMake(41.02, 50.42))
        bezier10Path.addCurveToPoint(CGPointMake(32.57, 55.42), controlPoint1: CGPointMake(37.24, 50.42), controlPoint2: CGPointMake(33.99, 52.49))
        bezier10Path.addCurveToPoint(CGPointMake(34.18, 58.58), controlPoint1: CGPointMake(31.91, 56.83), controlPoint2: CGPointMake(32.81, 58.58))
        bezier10Path.addLineToPoint(CGPointMake(47.81, 58.58))
        bezier10Path.addCurveToPoint(CGPointMake(49.37, 55.28), controlPoint1: CGPointMake(49.23, 58.58), controlPoint2: CGPointMake(50.08, 56.74))
        bezier10Path.addCurveToPoint(CGPointMake(41.02, 50.42), controlPoint1: CGPointMake(48, 52.45), controlPoint2: CGPointMake(44.79, 50.42))
        bezier10Path.closePath()
        bezier10Path.miterLimit = 4;

        fillColor8.setFill()
        bezier10Path.fill()


        //// Group 15
        CGContextSaveGState(context)
        CGContextBeginTransparencyLayer(context, nil)

        //// Clip Bezier 11
        let bezier11Path = UIBezierPath()
        bezier11Path.moveToPoint(CGPointMake(62.44, 67.26))
        bezier11Path.addCurveToPoint(CGPointMake(69, 49.52), controlPoint1: CGPointMake(66.55, 62.4), controlPoint2: CGPointMake(69, 56.22))
        bezier11Path.addCurveToPoint(CGPointMake(69, 49.33), controlPoint1: CGPointMake(69, 49.47), controlPoint2: CGPointMake(69, 49.38))
        bezier11Path.addCurveToPoint(CGPointMake(67.35, 39.8), controlPoint1: CGPointMake(69, 46.12), controlPoint2: CGPointMake(68.48, 42.87))
        bezier11Path.addCurveToPoint(CGPointMake(50.31, 2.19), controlPoint1: CGPointMake(62.54, 26.82), controlPoint2: CGPointMake(50.64, 16.77))
        bezier11Path.addCurveToPoint(CGPointMake(47.01, 0.4), controlPoint1: CGPointMake(50.27, 0.54), controlPoint2: CGPointMake(48.43, -0.5))
        bezier11Path.addCurveToPoint(CGPointMake(13.65, 51.97), controlPoint1: CGPointMake(30.45, 10.36), controlPoint2: CGPointMake(8.98, 30.55))
        bezier11Path.addCurveToPoint(CGPointMake(41.25, 77.27), controlPoint1: CGPointMake(14.88, 66.13), controlPoint2: CGPointMake(26.77, 77.27))
        bezier11Path.addCurveToPoint(CGPointMake(62.44, 67.26), controlPoint1: CGPointMake(49.7, 77.22), controlPoint2: CGPointMake(57.3, 73.35))
        bezier11Path.closePath()
        bezier11Path.miterLimit = 0;

        bezier11Path.addClip()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(5.63, 18, 66.67, 8.82))
        fillColor10.setFill()
        rectanglePath.fill()


        CGContextEndTransparencyLayer(context)
        CGContextRestoreGState(context)
    }

    public class func drawASAPFace() {
        //// Color Declarations
        let fillColor8 = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let fillColor12 = UIColor(red: 0.522, green: 0.053, blue: 0.177, alpha: 1.000)
        let fillColor13 = UIColor(red: 0.825, green: 0.803, blue: 0.765, alpha: 0.800)

        //// Group 16
        //// Group 17
        //// Oval 10 Drawing
        let oval10Path = UIBezierPath(ovalInRect: CGRectMake(28, 40, 6.61, 6.61))
        fillColor12.setFill()
        oval10Path.fill()


        //// Oval 11 Drawing
        let oval11Path = UIBezierPath(ovalInRect: CGRectMake(46.12, 40, 6.61, 6.61))
        fillColor12.setFill()
        oval11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.moveToPoint(CGPointMake(44.89, 62.7))
        bezier12Path.addLineToPoint(CGPointMake(35.79, 62.7))
        bezier12Path.addCurveToPoint(CGPointMake(31.59, 59.11), controlPoint1: CGPointMake(33.71, 62.7), controlPoint2: CGPointMake(31.92, 61.19))
        bezier12Path.addLineToPoint(CGPointMake(31.07, 55.85))
        bezier12Path.addCurveToPoint(CGPointMake(35.27, 50.9), controlPoint1: CGPointMake(30.64, 53.26), controlPoint2: CGPointMake(32.67, 50.9))
        bezier12Path.addLineToPoint(CGPointMake(45.41, 50.9))
        bezier12Path.addCurveToPoint(CGPointMake(49.61, 55.85), controlPoint1: CGPointMake(48.05, 50.9), controlPoint2: CGPointMake(50.04, 53.26))
        bezier12Path.addLineToPoint(CGPointMake(49.09, 59.11))
        bezier12Path.addCurveToPoint(CGPointMake(44.89, 62.7), controlPoint1: CGPointMake(48.76, 61.19), controlPoint2: CGPointMake(46.97, 62.7))
        bezier12Path.closePath()
        bezier12Path.miterLimit = 4;

        fillColor8.setFill()
        bezier12Path.fill()


        //// Bezier 13 Drawing
        let bezier13Path = UIBezierPath()
        bezier13Path.moveToPoint(CGPointMake(33.76, 52.74))
        bezier13Path.addLineToPoint(CGPointMake(46.87, 52.74))
        bezier13Path.addCurveToPoint(CGPointMake(49.23, 53.26), controlPoint1: CGPointMake(47.72, 52.74), controlPoint2: CGPointMake(48.53, 52.93))
        bezier13Path.addCurveToPoint(CGPointMake(45.41, 50.9), controlPoint1: CGPointMake(48.53, 51.84), controlPoint2: CGPointMake(47.11, 50.9))
        bezier13Path.addLineToPoint(CGPointMake(35.27, 50.9))
        bezier13Path.addCurveToPoint(CGPointMake(31.44, 53.26), controlPoint1: CGPointMake(33.57, 50.9), controlPoint2: CGPointMake(32.15, 51.89))
        bezier13Path.addCurveToPoint(CGPointMake(33.76, 52.74), controlPoint1: CGPointMake(32.15, 52.93), controlPoint2: CGPointMake(32.91, 52.74))
        bezier13Path.closePath()
        bezier13Path.miterLimit = 4;

        fillColor13.setFill()
        bezier13Path.fill()
    }

}
